diff --git a/feeds_tamper.module b/feeds_tamper.module
index 9da1c8c..b2ee429 100644
--- a/feeds_tamper.module
+++ b/feeds_tamper.module
@@ -35,40 +35,42 @@ function feeds_tamper_feeds_after_parse(FeedsSource $source, FeedsParserResult $
   foreach (array_keys($result->items) as $item_key) {
 
     // Initialize every source value.
-    $result->items[$item_key] += $sources;
+    // $result->items[$item_key] += $sources;
 
     foreach ($importer_instances as $element_key => $instances) {
       if ($is_csv) {
         $element_key = drupal_strtolower($element_key);
       }
 
-      // Manually advance the current_item key since we can't use shiftItem().
-      // Plugins can change it, so re-set.
-      $result->current_item = $result->items[$item_key];
-
-      // Plugins assume that everything lives in the item array.
-      $result->items[$item_key][$element_key] = $parser->getSourceElement($source, $result, $element_key);
-
-      foreach ($instances as $instance) {
-        // If the item was unset by previous plugin, jump ahead.
-        if (!isset($result->items[$item_key])) {
-          break 2;
-        }
-
-        // Array-ness can change depending on what the plugin is doing.
-        $is_array = is_array($result->items[$item_key][$element_key]);
-        $plugin = $plugins[$instance->plugin_id];
-
-        if ($is_array && $plugin['multi'] === 'loop') {
-          foreach ($result->items[$item_key][$element_key] as &$i) {
-            $plugin['callback']($result, $item_key, $element_key, $i, $instance->settings, $source);
+      if (isset($result->items[$item_key][$element_key])){
+        // Manually advance the current_item key since we can't use shiftItem().
+        // Plugins can change it, so re-set.
+        $result->current_item = $result->items[$item_key];
+  
+        // Plugins assume that everything lives in the item array.
+        $result->items[$item_key][$element_key] = $parser->getSourceElement($source, $result, $element_key);
+  
+        foreach ($instances as $instance) {
+          // If the item was unset by previous plugin, jump ahead.
+          if (!isset($result->items[$item_key])) {
+            break 2;
+          }
+  
+          // Array-ness can change depending on what the plugin is doing.
+          $is_array = is_array($result->items[$item_key][$element_key]);
+          $plugin = $plugins[$instance->plugin_id];
+  
+          if ($is_array && $plugin['multi'] === 'loop') {
+            foreach ($result->items[$item_key][$element_key] as &$i) {
+              $plugin['callback']($result, $item_key, $element_key, $i, $instance->settings, $source);
+            }
+          }
+          elseif ($is_array && $plugin['multi'] === 'direct') {
+            $plugin['callback']($result, $item_key, $element_key, $result->items[$item_key][$element_key], $instance->settings, $source);
+          }
+          elseif (!$is_array && $plugin['single'] !== 'skip') {
+            $plugin['callback']($result, $item_key, $element_key, $result->items[$item_key][$element_key], $instance->settings, $source);
           }
-        }
-        elseif ($is_array && $plugin['multi'] === 'direct') {
-          $plugin['callback']($result, $item_key, $element_key, $result->items[$item_key][$element_key], $instance->settings, $source);
-        }
-        elseif (!$is_array && $plugin['single'] !== 'skip') {
-          $plugin['callback']($result, $item_key, $element_key, $result->items[$item_key][$element_key], $instance->settings, $source);
         }
       }
     }
